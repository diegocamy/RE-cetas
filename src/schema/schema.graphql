# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ChangePasswordInput {
  password: String!
  token: String!
}

input CreatePostInput {
  content: String!
  picture: String!
  title: String!
}

type JWTPayload {
  exp: Int!
  jwt: String!
}

type Like {
  post: Post!
  user: User!
}

type Mutation {
  DeletePost(slug: String!): Boolean!
  changePassword(data: ChangePasswordInput!): JWTPayload
  confirmAccount(token: String!): JWTPayload
  createPost(data: CreatePostInput!): Post!
  editPost(data: CreatePostInput!, slug: String!): Post!
  forgotPassword(email: String!): Boolean!
  invalidateRefreshTokens: Boolean!
  likepost(slug: String!): Boolean!
  login(email: String!, password: String!): JWTPayload!
  register(data: RegisterUserInput!): Boolean!
}

input PasswordType {
  password: String!
}

type Post {
  author: User!
  content: String!
  created: Timestamp!
  id: ID!
  likeCount: Int
  likes: [Like!]!
  picture: String!
  slug: String!
  title: String!
  updated: Timestamp!
}

input PostSearchInputType {
  authorId: Float
  id: ID
  slug: String
  title: String
}

type Query {
  posts(data: PostSearchInputType): [Post!]!
  protected: String!
  userByUsername(username: String!): User
  users: [User!]!
}

input RegisterUserInput {
  email: String!
  password: String!
  username: String!
}

# The javascript `Date` as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
scalar Timestamp

type User {
  bio: String
  created: Timestamp!
  email: String!
  id: ID!
  likedPosts: [Like!]!
  postCount: Int!
  posts: [Post!]!
  updated: Timestamp!
  username: String!
}
